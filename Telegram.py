import os
import subprocess
import uuid
import re
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes

BOT_TOKEN = "7519273294:AAGqaTQIQq1X4GF_F5DexzBrKfbFYga8NDE"

# Helper function: check if URL is valid for yt-dlp
def is_supported_url(url):
    yt_dlp_domains = [
        "tiktok.com", "facebook.com", "fb.watch", "youtube.com", "youtu.be",
        "instagram.com", "pin.it", "pinterest.com"
    ]
    return any(domain in url for domain in yt_dlp_domains)

# /start command
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üëã ‡¶π‡ßç‡¶Ø‡¶æ‡¶≤‡ßã Sir, ‡¶∂‡ßÅ‡¶ß‡ßÅ TikTok, YouTube, FB, Instagram ‡¶¨‡¶æ Pinterest ‡¶≤‡¶ø‡¶Ç‡¶ï ‡¶™‡¶æ‡¶†‡¶æ‡¶ì, ‡¶Ü‡¶Æ‡¶ø ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶®‡¶æ‡¶Æ‡¶ø‡ßü‡ßá ‡¶¶‡ßá‡¶¨‡ßã "
    )

# Handle link messages
async def download_video(update: Update, context: ContextTypes.DEFAULT_TYPE):
    url = update.message.text.strip()

    if not is_supported_url(url):
        await update.message.reply_text("‚ùå ‡¶∏‡¶∞‡¶ø,  ‡¶è‡¶á ‡¶≤‡¶ø‡¶Ç‡¶ï‡¶ü‡¶æ ‡¶∏‡¶æ‡¶™‡ßã‡¶∞‡ßç‡¶ü ‡¶ï‡¶∞‡¶ø ‡¶®‡¶æ üò•")
        return

    await update.message.reply_text("üì• ‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶° ‡¶π‡¶ö‡ßç‡¶õ‡ßá... ‡¶è‡¶ï‡¶ü‡ßÅ ‡¶Ö‡¶™‡ßá‡¶ï‡ßç‡¶∑‡¶æ ‡¶ï‡¶∞‡ßã üòå")

    # Random filename for temporary download
    file_id = str(uuid.uuid4())
    output_template = f"{file_id}.%(ext)s"

    try:
        # Run yt-dlp subprocess
        result = subprocess.run(
            ["yt-dlp", "-o", output_template, url],
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE,
            text=True
        )

        # Check for success
        if result.returncode != 0:
            await update.message.reply_text("üòì ‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶≤‡¶æ‡¶Æ ‡¶®‡¶æ... ‡¶≤‡¶ø‡¶Ç‡¶ï‡¶ü‡¶æ ‡¶Ü‡¶¨‡¶æ‡¶∞ ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡ßã?")
            return

        # Find downloaded file
        for file in os.listdir():
            if file.startswith(file_id):
                with open(file, "rb") as video:
                    await update.message.reply_video(video)
                os.remove(file)  # Clean up
                return

        await update.message.reply_text("üòì ‡¶´‡¶æ‡¶á‡¶≤ ‡¶ñ‡ßÅ‡¶Å‡¶ú‡ßá ‡¶™‡ßá‡¶≤‡¶æ‡¶Æ ‡¶®‡¶æ... ‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶è‡¶ï‡¶ü‡¶æ ‡¶ó‡ßã‡¶≤‡¶Æ‡¶æ‡¶≤ ‡¶π‡¶á‡¶õ‡ßá")

    except Exception as e:
        await update.message.reply_text(f"‚ö†Ô∏è ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡¶á‡¶õ‡ßá ‡¶ú‡¶æ‡¶®: {e}")

# Main function
if __name__ == "__main__":
    app = ApplicationBuilder().token(BOT_TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & (~filters.COMMAND), download_video))

    print("ü§ñ ‡¶¨‡¶ü ‡¶ö‡¶æ‡¶≤‡ßÅ ‡¶π‡¶á‡¶õ‡ßá !")
    app.run_polling()